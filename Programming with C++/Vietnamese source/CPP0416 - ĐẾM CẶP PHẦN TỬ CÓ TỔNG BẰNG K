//Cách 1:
#include <bits/stdc++.h>

using namespace std;

int main() {
	int t;
	cin >> t;
	while (t--) {
		int n, k;
		cin >> n >> k;
		int a[n];
		for (int i = 0; i < n; i++) {
			cin >> a[i];
		}
		int count = 0;
		for (int i = 0; i < n - 1; i++) {
			for (int j = i + 1; j < n; j++) {
				if (a[i] + a[j] == k) {
					count++;
				}
			}
		}
		cout << count << endl;
	}
	return 0;
}
//Cách 2:
#include <bits/stdc++.h>

using namespace std;

int main() {
	int t;
	cin >> t;
	while (t--) {
		int n, k;
		cin >> n >> k;
		map<int, int> mp;
		int a[n];
		for (int i = 0; i < n; i++) {
			cin >> a[i];
			mp[a[i]]++;
		}
		long long ans = 0;
		for (int i = 0; i < n; i++) {
			ans += mp[k - a[i]];
			if (a[i] * 2 == k) {
				ans--;
			}
		}
		cout << ans / 2 << endl;
	}
	return 0;
}
//Cách 3:
#include <bits/stdc++.h>

using namespace std;

int first_pos(int a[], int l, int r, int x) {
    int res = -1;
    while (l <= r) {
        int m = l + (r - l) / 2;
        if (a[m] == x) {
            res = m;
            r = m - 1;
        } else if (a[m] > x) {
            r = m - 1;
        } else {
            l = m + 1;
        }
    }
    return res;
}

int last_pos(int a[], int l, int r, int x) {
    int res = -1;
    while (l <= r) {
        int m = l + (r - l) / 2;
        if (a[m] == x) {
            res = m;
            l = m + 1;
        } else if (a[m] > x) {
            r = m - 1;
        } else {
            l = m + 1;
        }
    }
    return res;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k;
        cin >> n >> k;
        int a[n];
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        sort(a, a + n);
        long long ans = 0;
        for (int i = 0; i < n; i++) {
            int l = first_pos(a, i + 1, n - 1, k - a[i]);
            int r = last_pos(a, i + 1, n - 1, k - a[i]);
            if (l != -1) {
                ans += r - l + 1;
            }
        }
        cout << ans << endl;8
    }
    return 0;
}
