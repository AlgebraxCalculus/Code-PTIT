#include <bits/stdc++.h>

using namespace std;

int cnt = 0, cnt1 = 0, cnt2 = 0;

class KhachHang;
class MatHang;
class HoaDon;

map<string, KhachHang> mp1;
map<string, MatHang> mp2;

class KhachHang {
public:
    string id, name, gt, dob, dc;

    KhachHang() {
        id = name = gt = dob = dc = "";
    }

    friend class HoaDon;
    friend istream& operator>>(istream& in, KhachHang& a) {
        cnt++;
        string tmp = to_string(cnt);
        while (tmp.size() < 3) {
            tmp.insert(0, "0");
        }
        a.id = "KH" + tmp;
        getline(in >> ws, a.name);
        in >> a.gt >> a.dob;
        getline(in >> ws, a.dc);
        mp1[a.id] = a;
        return in;
    }
};

class MatHang {
public:
    string id1, name1, dv;
    int mua, ban;

    MatHang() {
        id1 = name1 = dv = "";
        mua = ban = 0;
    }

    friend class HoaDon;
    friend istream& operator>>(istream& in, MatHang& a) {
        cnt1++;
        string tmp = to_string(cnt1);
        while (tmp.size() < 3) {
            tmp.insert(0, "0");
        }
        a.id1 = "MH" + tmp;
        getline(in >> ws, a.name1);
        in >> a.dv >> a.mua >> a.ban;
        mp2[a.id1] = a;
        return in;
    }
};

class HoaDon {
public:
    string idkh, idmh, idhd;
    int sl;
    long long ln, tt;

    HoaDon() {
        idkh = idmh = idhd = "";
        sl = 0;
        ln = tt = 0;
    }

    friend istream& operator>>(istream& in, HoaDon& a) {
        cnt2++;
        string tmp = to_string(cnt2);
        while (tmp.size() < 3) {
            tmp.insert(0, "0");
        }
        a.idhd = "HD" + tmp;
        in >> a.idkh >> a.idmh >> a.sl;
        a.tt = mp2[a.idmh].ban * a.sl;
        a.ln = (mp2[a.idmh].ban - mp2[a.idmh].mua) * a.sl;
        return in;
    }

    friend ostream& operator<<(ostream& out, HoaDon a) {
        out << a.idhd << ' ' << mp1[a.idkh].name << ' ' << mp1[a.idkh].dc << ' ' << mp2[a.idmh].name1 << ' ' << a.sl << ' ' << a.tt << ' ' << a.ln << endl;
        return out;
    }
};

bool cmp(HoaDon a, HoaDon b) {
    if (a.ln != b.ln) {
        return a.ln > b.ln;
    }
    return a.idhd < b.idhd;
}

void sapxep(HoaDon a[], int n) {
    sort(a, a + n, cmp);
}

int main() {
    KhachHang dskh[25];
    MatHang dsmh[45];
    HoaDon dshd[105];
    int N, M, K, i;
    cin >> N;
    for (i = 0; i < N; i++) {
        cin >> dskh[i];
    }
    cin >> M;
    for (i = 0; i < M; i++) {
        cin >> dsmh[i];
    }
    cin >> K;
    for (i = 0; i < K; i++) {
        cin >> dshd[i];
    }
    sapxep(dshd, K);
    for (i = 0; i < K; i++) {
        cout << dshd[i];
    }
    return 0;
}
