#include <bits/stdc++.h>

using namespace std;

struct MH {
	string ma, name, hang, dv;
	int nhap, ban;
};

string solve (string s) {
	stringstream ss(s);
	string temp, res = "";
	while (ss >> temp) {
		res += toupper(temp[0]);
	}
	return res;
}

bool cmp (MH a, MH b) {
	int ln1 = a.ban - a.nhap, ln2 = b.ban - b.nhap;
	if (ln1 == ln2) {
		return a.ma < b.ma;
	}
	return ln1 > ln2;
}

int main() {
	int n;
	cin >> n;
	vector<MH> v;
	map<string, int> mp;
	for (int i = 0; i < n; i++) {
		string name, hang, dv;
		int nhap, ban;
		scanf("\n");
		getline(cin, name);
		getline(cin, hang);
		getline(cin, dv);
		cin >> nhap >> ban;
		string ma = solve(name);
		mp[ma]++;
		string tmp = to_string(mp[ma]);
		while (tmp.size() < 4) {
			tmp = "0" + tmp;
		}
		ma += tmp;
		MH x{ma, name, hang, dv, nhap, ban};
		v.push_back(x);
	}
	sort(v.begin(), v.end(), cmp);
	for (auto x : v) {
		cout << x.ma << ' ' << x.name << ' ' << x.hang << ' ' << x.dv << ' ' << x.nhap << ' ' << x.ban << endl;
	}
	return 0;
}
