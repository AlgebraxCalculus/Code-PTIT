#include <bits/stdc++.h>

using namespace std;

int n, m;
int a[100][100];
int dem = 0;

int dx[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
int dy[8] = {-1, 0, 1, -1, 1, -1, 0, 1};

void DFS (int i, int j, int x) {
    dem++;
    a[i][j] = 1000;
    for (int k = 0; k < 8; k++) {
        int i1 = i + dx[k], j1 = j + dy[k];
        if (i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= m && a[i1][j1] == x) {
            DFS(i1, j1, x);
        }
    }
}

int main() {
    cin >> n >> m;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            cin >> a[i][j];
        }
    }
    map<int, vector<int>> mp;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (a[i][j] != 1000) {
                int tmp = a[i][j];
                dem = 0;
                DFS(i, j, tmp);
                mp[tmp].push_back(dem);
            }
        }
    }
    for (auto x : mp) {
        sort(x.second.begin(), x.second.end());
        cout << x.first << " : ";
        for (auto it : x.second) {
            cout << it << ' ';
        }
        cout << endl;
    }
    return 0;
}
