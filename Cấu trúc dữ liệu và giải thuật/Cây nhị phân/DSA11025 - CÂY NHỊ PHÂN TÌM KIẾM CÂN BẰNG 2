#include <bits/stdc++.h>

using namespace std;

struct TreeNode {
	int data;
	TreeNode *left;
	TreeNode *right; 
};

typedef struct TreeNode* node;

node makeNode (int x) {
	node tmp = new TreeNode();
	tmp->data = x;
	tmp->left = tmp->right = NULL;
	return tmp;
}

node buildBST (int a[], int l, int r) {
	if (l > r) {
		return NULL;
	}
	int m = (l + r) / 2;
	node root = makeNode(a[m]);
	root->left = buildBST(a, l, m - 1);
	root->right = buildBST(a, m + 1, r);
	return root;
}

void printPreOrder (node root) {
	if (root == NULL) {
		return;
	}
	cout << root->data << ' ';
	printPreOrder(root->left);
	printPreOrder(root->right);
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		int a[n];
		for (int i = 0; i < n; i++) {
			cin >> a[i];
		}
		sort(a, a + n);
		node root = buildBST(a, 0, n - 1);
		printPreOrder(root);
		cout << endl;
	}
	return 0;
}
