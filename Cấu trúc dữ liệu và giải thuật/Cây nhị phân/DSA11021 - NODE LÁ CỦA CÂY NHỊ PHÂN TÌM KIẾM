#include <bits/stdc++.h>

using namespace std;

struct TreeNode {
    int data;
    TreeNode* left;
    TreeNode* right;
};

typedef struct TreeNode* node;

node makeNode (int x) {
    node newNode = new TreeNode();
    newNode->data = x;
    newNode->left = newNode->right = NULL;
    return newNode;
}

node buildTree (node root, int x) {
    if (root == NULL) {
        return makeNode(x);
    }
    if (x < root->data) {
        root->left = buildTree(root->left, x); 
    } else if (x > root->data) {
        root->right = buildTree(root->right, x); 
    }
    return root; 
}

void printLeafNodes (node root) {
    if (root == NULL) {
        return;
    }
    if (root->left == NULL && root->right == NULL) {
        cout << root->data << ' ';
        return;
    }
    if (root->left != NULL) {
        printLeafNodes(root->left);
    }
    if (root->right != NULL) {
        printLeafNodes(root->right);
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        node root = NULL;
        for (int i = 0; i < n; i++) {
            int x;
            cin >> x;
            root = buildTree(root, x); 
        }
        printLeafNodes(root);
        cout << endl;
    }
    return 0;
}
