#include <bits/stdc++.h>

using namespace std;

struct TreeNode {
	int data;
	TreeNode* left;
	TreeNode* right;
};

typedef struct TreeNode* node;

node makeNode (int x) {
	node newNode = new TreeNode();
	newNode->data = x;
	newNode->left = newNode->right = NULL;
	return newNode;
}

node buildBST (int a[], int l, int r) {
	if (l > r) {
		return NULL;
	}
	int m = (l + r) / 2;
	node root = makeNode(a[m]);
	root->left = buildBST(a, l, m - 1);
	root->right = buildBST(a, m + 1, r);
	return root;
}

int findLeafNode (node root) {
	if (root == NULL) {
		return 0;
	}
	if (root->left == NULL && root->right == NULL) {
		return 1;
	} 
	return findLeafNode(root->left) + findLeafNode(root->right);
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		node root = NULL;
		int a[n];
		for (int i = 0; i < n; i++) {
			cin >> a[i];
		}
		sort(a, a + n);
		root = buildBST(a, 0, n - 1);
		cout << findLeafNode(root) << endl;
	}
	return 0;
}
