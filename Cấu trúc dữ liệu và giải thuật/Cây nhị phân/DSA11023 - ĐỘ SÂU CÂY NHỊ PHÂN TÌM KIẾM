#include <bits/stdc++.h>

using namespace std;

struct TreeNode {
	int data;
	TreeNode* left;
	TreeNode* right;
};

typedef struct TreeNode* node;

node makeNode (int x) {
	node newNode = new TreeNode();
	newNode->data = x;
	newNode->left = newNode->right = NULL;
	return newNode;
}

node buildTree (node root, int x) {
	if (root == NULL) {
		return makeNode(x);
	}
	if (x < root->data) {
		root->left = buildTree(root->left, x);
	} else if (x > root->data) {
		root->right = buildTree(root->right, x);
	}
	return root;
}

int maxDepth (node root) {
	if (root == NULL) {
		return -1;
	} else {
		int leftDepth = maxDepth(root->left);
		int rightDepth = maxDepth(root->right);
		if (leftDepth > rightDepth) {
			return leftDepth + 1;
		} else {
			return rightDepth + 1;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		node root = NULL;
		for (int i = 0; i < n; i++) {
			int tmp;
			cin >> tmp;
			root = buildTree(root, tmp);
		}
		cout << maxDepth(root) << endl;
	}
	return 0;
}
