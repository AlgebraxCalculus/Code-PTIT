#include <bits/stdc++.h>

using namespace std;

int n, m, a[501][501], d[501][501];
int dx[4] = {-1, 0, 0, 1};
int dy[4] = {0, -1, 1, 0};

void Dijsktra (int s, int t) {
	priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> pq;
	d[s][t] = a[s][t];
	pq.push({a[s][t], {s, t}});
	while (!pq.empty()) {
		auto top = pq.top();
		pq.pop();
		int kc = top.first, i = top.second.first, j = top.second.second;
		if (kc > d[i][j]) continue;
		for (int k = 0; k < 4; k++) {
			int i1 = i + dx[k];
			int j1 = j + dy[k];
			if (i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= m) {
				if (d[i][j] + a[i1][j1] < d[i1][j1]) { 
					d[i1][j1] = d[i][j] + a[i1][j1];
					pq.push({d[i1][j1], {i1, j1}});
				}
			}
		}
	}
	cout << d[n][m] << endl;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m; 
		memset(a, 0, sizeof(a));
		memset(d, 0, sizeof(d));
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> a[i][j];
				d[i][j] = 1e9;
			}
		}
		Dijsktra(1, 1);
	}
	return 0;
}
