#include <bits/stdc++.h>

using namespace std;

void Right_Smaller (int a[], int n, int right[]) {
	stack<int> st;
	for (int i = 0; i < n; i++) {
		while (!st.empty() && a[i] < a[st.top()]) {
			right[st.top()] = i;
			st.pop();
		}
		st.push(i);
	}
	while (!st.empty()) {
		right[st.top()] = n;
		st.pop();
	}
}

void Left_Smaller (int a[], int n, int left[]) {
	stack<int> st;
	for (int i = n - 1; i >= 0; i--) {
		while (!st.empty() && a[i] < a[st.top()]) {
			left[st.top()] = i;
			st.pop();
		}
		st.push(i);
	}
	while (!st.empty()) {
		left[st.top()] = -1;
		st.pop();
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		int a[n], right[n], left[n];
		for (int i = 0; i < n; i++) {
			cin >> a[i];
		}
		Right_Smaller(a, n, right);
		Left_Smaller(a, n, left);
		int res = 0;
		for (int i = 0; i < n; i++) {
			if (right[i] - left[i] - 1 >= a[i]) {
				res = max(res, a[i]); 
			}
		}
		cout << res << endl;
	}
	return 0;
}
