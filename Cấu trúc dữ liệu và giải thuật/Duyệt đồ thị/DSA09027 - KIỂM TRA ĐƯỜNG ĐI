#include <bits/stdc++.h>

using namespace std;

int n, m, s, t;
vector<int> adj[1001];
bool visited[1001];
int parent[1001];

void input() {
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		adj[i].clear();
	}
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
}

void DFS (int u) {
	visited[u] = 1;
	for (int v : adj[u]) {
		if (!visited[v]) {
			parent[v] = u;
			DFS(v);
		}
	}
}

void Path (int s, int t) {
	DFS(s);
	if (!visited[t]) {
		cout << "NO" << endl;
	} else {
		cout << "YES" << endl;
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int test;
	cin >> test;
	while (test--) {
		input();
		int q;
		cin >> q;
		while (q--) {
			cin >> s >> t;
			memset(visited, 0, sizeof(visited));
			memset(parent, 0, sizeof(parent));
			Path(s, t);
		}
	}
	return 0;
}
