#include <bits/stdc++.h>

using namespace std;

vector<int> adj[1001];
bool visited[1001];

void DFS (int u) {
	visited[u] = true;
	for (int v : adj[u]) {
		if (!visited[v]) {
			DFS(v);
		}
	}
}

void solve() {
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++) {
		adj[i].clear();
	}
	for (int i = 0; i < n - 1; i++) {
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	} 
	memset(visited, 0, sizeof(visited));
	DFS(1);
	for (int i = 1; i <= n; i++) {
		if (!visited[i]) {
			cout << "NO" << endl;
			return;
		}
	}
	cout << "YES" << endl;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		solve();
	}
	return 0;
}
