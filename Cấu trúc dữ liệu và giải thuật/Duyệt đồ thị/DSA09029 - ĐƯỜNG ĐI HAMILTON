#include <bits/stdc++.h>

using namespace std;

int n, m, ok;
vector<int> adj[1001];
bool visited[1001];

void DFS (int u, int cnt) {
	if (ok) return;
	if (cnt == n) {
		ok = 1;
	}
	for (int v : adj[u]) {
		if (!visited[v]) {
			visited[v] = true;
			DFS(v, cnt + 1);
			visited[v] = false;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
		for (int i = 0; i < m; i++) {
			int x, y;
			cin >> x >> y;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
		memset(visited, false, sizeof(visited));
		ok = 0;
		for (int i = 1; i <= n; i++) {
			visited[i] = true;
			DFS(i, 1);
			visited[i] = false;
		}
		cout << ok << endl;
	}
	return 0;
}
