#include <bits/stdc++.h>

using namespace std;

vector<int> adj[1001];
int inDegree[1001];
int n, m;

bool Kahn() {
	queue<int> q;
	for (int i = 1; i <= n; i++) {
		if (inDegree[i] == 0) {
			q.push(i);
		}
	}
	int cnt = 0;
	while(!q.empty()) {
		int v = q.front();
		q.pop(); 
		cnt++;
		for (int x : adj[v]) {
			inDegree[x]--;
			if (inDegree[x] == 0) {
				q.push(x);
			}
		}
	}
	if (cnt == n) return false;
	else return true;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
		memset(inDegree, 0, sizeof(inDegree));
		for (int i = 0; i < m; i++) {
			int x, y;
			cin >> x >> y;
			adj[x].push_back(y);
			inDegree[y]++;
		}
		if (Kahn()) {
			cout << "YES" << endl;
		} else {
			cout << "NO" << endl;
		}
	}
	return 0;
}
