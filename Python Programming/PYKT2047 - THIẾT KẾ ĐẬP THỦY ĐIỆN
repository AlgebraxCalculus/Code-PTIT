from sys import stdin

def Lower_bound(a, x):
    l, r, res = 0, len(a) - 1, 0
    while l <= r:
        m = (l + r) // 2
        if a[m] < x:
            res = m
            l = m + 1
        else:
            r = m - 1
    return res

if __name__ == '__main__':
    inp = []
    for line in stdin:
        for x in line.split():
            inp.append(int(x))
    it = iter(inp)
    t = next(it)
    for _ in range(t):
        n = next(it)
        l = [0] + [next(it) for i in range(n)]
        h = [0] + [next(it) for i in range(n)]
        total = [0] * (n + 1)
        water = [0] * (n + 1)
        st = []
        for i in range(1, n + 1):
            total[i] = total[i - 1] + h[i]
            while len(st) != 0 and h[i] >= h[st[-1]]:
                st.pop()
            if len(st) == 0:
                water[i] = l[i] * h[i] - total[i - 1]
            else:
                water[i] = water[st[-1]] + (l[i] - l[st[-1]] - 1) * h[i] - (total[i - 1] - total[st[-1]])
            st.append(i)
        q = next(it)
        for _ in range(q):
            k = next(it)
            print(Lower_bound(water, k))
