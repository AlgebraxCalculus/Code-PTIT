import java.util.Arrays;
import java.util.Scanner;

public class Main {
    private static int lower_bound(int[] a, int l, int r, int x) {
        int res = -1;
        while (l <= r) {
            int m = (l + r) / 2;
            if (a[m] == x) {
                res = m;
                r = m - 1;
            } else if (a[m] < x) {
                l = m + 1;
            } else {
                r = m - 1;
            }
        }
        return res;
    }

    private static int upper_bound(int[] a, int l, int r, int x) {
        int res = -1;
        while (l <= r) {
            int m = (l + r) / 2;
            if (a[m] == x) {
                res = m;
                l = m + 1;
            } else if (a[m] < x) {
                l = m + 1;
            } else {
                r = m - 1;
            }
        }
        return res;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t --> 0) {
            int n = sc.nextInt();
            int k = sc.nextInt();
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            Arrays.sort(a);
            long ans = 0;
            for (int i = 0; i < n; i++) {
                int p1 = lower_bound(a, i + 1, n - 1, k - a[i]);
                int p2 = upper_bound(a, i + 1, n - 1, k - a[i]);
                if (p1 != -1) {
                    ans += (p2 - p1 + 1);
                }
            }
            System.out.println(ans);
        }
    }
}
